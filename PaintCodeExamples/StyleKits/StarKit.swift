//
//  StarKit.swift
//  PaintCodeExamples
//
//  Created by Shane Whitehead on 25/8/18.
//  Copyright Â© 2018 Me. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class StarKit : NSObject {

    //// Drawing Methods

    @objc dynamic public class func drawStarRating(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 252, height: 49), resizing: ResizingBehavior = .aspectFit, rating: CGFloat = 5) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 252, height: 49), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 252, y: resizedFrame.height / 49)


        //// Color Declarations
        let fillColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Variable Declarations
        let ratingFillWidth: CGFloat = min(5, max(0, rating)) / 5.0 * 252

        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: ratingFillWidth, height: 49))
        fillColor.setFill()
        rectanglePath.fill()


        //// Bezier 6 Drawing
        context.saveGState()
        context.setBlendMode(.destinationIn)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 26, y: 1))
        bezier6Path.addLine(to: CGPoint(x: 26, y: 1))
        bezier6Path.addCurve(to: CGPoint(x: 25.07, y: 1.64), controlPoint1: CGPoint(x: 25.59, y: 1), controlPoint2: CGPoint(x: 25.22, y: 1.26))
        bezier6Path.addLine(to: CGPoint(x: 18.9, y: 17.54))
        bezier6Path.addLine(to: CGPoint(x: 1.95, y: 18.4))
        bezier6Path.addLine(to: CGPoint(x: 1.95, y: 18.4))
        bezier6Path.addCurve(to: CGPoint(x: 1, y: 19.45), controlPoint1: CGPoint(x: 1.4, y: 18.43), controlPoint2: CGPoint(x: 0.97, y: 18.9))
        bezier6Path.addCurve(to: CGPoint(x: 1.37, y: 20.18), controlPoint1: CGPoint(x: 1.02, y: 19.73), controlPoint2: CGPoint(x: 1.15, y: 20))
        bezier6Path.addLine(to: CGPoint(x: 14.57, y: 30.97))
        bezier6Path.addLine(to: CGPoint(x: 10.23, y: 47.34))
        bezier6Path.addLine(to: CGPoint(x: 10.23, y: 47.34))
        bezier6Path.addCurve(to: CGPoint(x: 10.94, y: 48.57), controlPoint1: CGPoint(x: 10.09, y: 47.88), controlPoint2: CGPoint(x: 10.41, y: 48.42))
        bezier6Path.addCurve(to: CGPoint(x: 11.74, y: 48.44), controlPoint1: CGPoint(x: 11.21, y: 48.64), controlPoint2: CGPoint(x: 11.51, y: 48.59))
        bezier6Path.addLine(to: CGPoint(x: 26, y: 39.29))
        bezier6Path.addLine(to: CGPoint(x: 40.26, y: 48.44))
        bezier6Path.addLine(to: CGPoint(x: 40.26, y: 48.44))
        bezier6Path.addCurve(to: CGPoint(x: 41.64, y: 48.15), controlPoint1: CGPoint(x: 40.72, y: 48.74), controlPoint2: CGPoint(x: 41.34, y: 48.61))
        bezier6Path.addCurve(to: CGPoint(x: 41.77, y: 47.34), controlPoint1: CGPoint(x: 41.79, y: 47.91), controlPoint2: CGPoint(x: 41.84, y: 47.62))
        bezier6Path.addLine(to: CGPoint(x: 37.43, y: 30.97))
        bezier6Path.addLine(to: CGPoint(x: 50.63, y: 20.17))
        bezier6Path.addLine(to: CGPoint(x: 50.63, y: 20.18))
        bezier6Path.addCurve(to: CGPoint(x: 50.78, y: 18.77), controlPoint1: CGPoint(x: 51.06, y: 19.83), controlPoint2: CGPoint(x: 51.13, y: 19.2))
        bezier6Path.addCurve(to: CGPoint(x: 50.05, y: 18.4), controlPoint1: CGPoint(x: 50.6, y: 18.55), controlPoint2: CGPoint(x: 50.34, y: 18.42))
        bezier6Path.addLine(to: CGPoint(x: 33.1, y: 17.54))
        bezier6Path.addLine(to: CGPoint(x: 26.93, y: 1.64))
        bezier6Path.addLine(to: CGPoint(x: 26.93, y: 1.64))
        bezier6Path.addCurve(to: CGPoint(x: 26, y: 1), controlPoint1: CGPoint(x: 26.78, y: 1.26), controlPoint2: CGPoint(x: 26.41, y: 1))
        bezier6Path.close()
        bezier6Path.move(to: CGPoint(x: 76, y: 1))
        bezier6Path.addLine(to: CGPoint(x: 76, y: 1))
        bezier6Path.addCurve(to: CGPoint(x: 75.07, y: 1.64), controlPoint1: CGPoint(x: 75.59, y: 1), controlPoint2: CGPoint(x: 75.22, y: 1.26))
        bezier6Path.addLine(to: CGPoint(x: 68.9, y: 17.54))
        bezier6Path.addLine(to: CGPoint(x: 51.95, y: 18.4))
        bezier6Path.addLine(to: CGPoint(x: 51.95, y: 18.4))
        bezier6Path.addCurve(to: CGPoint(x: 51, y: 19.45), controlPoint1: CGPoint(x: 51.4, y: 18.43), controlPoint2: CGPoint(x: 50.97, y: 18.9))
        bezier6Path.addCurve(to: CGPoint(x: 51.37, y: 20.18), controlPoint1: CGPoint(x: 51.02, y: 19.73), controlPoint2: CGPoint(x: 51.15, y: 20))
        bezier6Path.addLine(to: CGPoint(x: 64.57, y: 30.97))
        bezier6Path.addLine(to: CGPoint(x: 60.23, y: 47.34))
        bezier6Path.addLine(to: CGPoint(x: 60.23, y: 47.34))
        bezier6Path.addCurve(to: CGPoint(x: 60.94, y: 48.57), controlPoint1: CGPoint(x: 60.09, y: 47.88), controlPoint2: CGPoint(x: 60.41, y: 48.42))
        bezier6Path.addCurve(to: CGPoint(x: 61.74, y: 48.44), controlPoint1: CGPoint(x: 61.21, y: 48.64), controlPoint2: CGPoint(x: 61.51, y: 48.59))
        bezier6Path.addLine(to: CGPoint(x: 76, y: 39.29))
        bezier6Path.addLine(to: CGPoint(x: 90.26, y: 48.44))
        bezier6Path.addLine(to: CGPoint(x: 90.26, y: 48.44))
        bezier6Path.addCurve(to: CGPoint(x: 91.64, y: 48.15), controlPoint1: CGPoint(x: 90.72, y: 48.74), controlPoint2: CGPoint(x: 91.34, y: 48.61))
        bezier6Path.addCurve(to: CGPoint(x: 91.77, y: 47.34), controlPoint1: CGPoint(x: 91.79, y: 47.91), controlPoint2: CGPoint(x: 91.84, y: 47.62))
        bezier6Path.addLine(to: CGPoint(x: 87.43, y: 30.97))
        bezier6Path.addLine(to: CGPoint(x: 100.63, y: 20.17))
        bezier6Path.addLine(to: CGPoint(x: 100.63, y: 20.18))
        bezier6Path.addCurve(to: CGPoint(x: 100.78, y: 18.77), controlPoint1: CGPoint(x: 101.06, y: 19.83), controlPoint2: CGPoint(x: 101.13, y: 19.2))
        bezier6Path.addCurve(to: CGPoint(x: 100.05, y: 18.4), controlPoint1: CGPoint(x: 100.6, y: 18.55), controlPoint2: CGPoint(x: 100.34, y: 18.42))
        bezier6Path.addLine(to: CGPoint(x: 83.1, y: 17.54))
        bezier6Path.addLine(to: CGPoint(x: 76.93, y: 1.64))
        bezier6Path.addLine(to: CGPoint(x: 76.93, y: 1.64))
        bezier6Path.addCurve(to: CGPoint(x: 76, y: 1), controlPoint1: CGPoint(x: 76.78, y: 1.26), controlPoint2: CGPoint(x: 76.41, y: 1))
        bezier6Path.close()
        bezier6Path.move(to: CGPoint(x: 126, y: 1))
        bezier6Path.addLine(to: CGPoint(x: 126, y: 1))
        bezier6Path.addCurve(to: CGPoint(x: 125.07, y: 1.64), controlPoint1: CGPoint(x: 125.59, y: 1), controlPoint2: CGPoint(x: 125.22, y: 1.26))
        bezier6Path.addLine(to: CGPoint(x: 118.9, y: 17.54))
        bezier6Path.addLine(to: CGPoint(x: 101.95, y: 18.4))
        bezier6Path.addLine(to: CGPoint(x: 101.95, y: 18.4))
        bezier6Path.addCurve(to: CGPoint(x: 101, y: 19.45), controlPoint1: CGPoint(x: 101.4, y: 18.43), controlPoint2: CGPoint(x: 100.97, y: 18.9))
        bezier6Path.addCurve(to: CGPoint(x: 101.37, y: 20.18), controlPoint1: CGPoint(x: 101.02, y: 19.73), controlPoint2: CGPoint(x: 101.15, y: 20))
        bezier6Path.addLine(to: CGPoint(x: 114.57, y: 30.97))
        bezier6Path.addLine(to: CGPoint(x: 110.23, y: 47.34))
        bezier6Path.addLine(to: CGPoint(x: 110.23, y: 47.34))
        bezier6Path.addCurve(to: CGPoint(x: 110.94, y: 48.57), controlPoint1: CGPoint(x: 110.09, y: 47.88), controlPoint2: CGPoint(x: 110.41, y: 48.42))
        bezier6Path.addCurve(to: CGPoint(x: 111.74, y: 48.44), controlPoint1: CGPoint(x: 111.21, y: 48.64), controlPoint2: CGPoint(x: 111.51, y: 48.59))
        bezier6Path.addLine(to: CGPoint(x: 126, y: 39.29))
        bezier6Path.addLine(to: CGPoint(x: 140.26, y: 48.44))
        bezier6Path.addLine(to: CGPoint(x: 140.26, y: 48.44))
        bezier6Path.addCurve(to: CGPoint(x: 141.64, y: 48.15), controlPoint1: CGPoint(x: 140.72, y: 48.74), controlPoint2: CGPoint(x: 141.34, y: 48.61))
        bezier6Path.addCurve(to: CGPoint(x: 141.77, y: 47.34), controlPoint1: CGPoint(x: 141.79, y: 47.91), controlPoint2: CGPoint(x: 141.84, y: 47.62))
        bezier6Path.addLine(to: CGPoint(x: 137.43, y: 30.97))
        bezier6Path.addLine(to: CGPoint(x: 150.63, y: 20.17))
        bezier6Path.addLine(to: CGPoint(x: 150.63, y: 20.18))
        bezier6Path.addCurve(to: CGPoint(x: 150.78, y: 18.77), controlPoint1: CGPoint(x: 151.06, y: 19.83), controlPoint2: CGPoint(x: 151.13, y: 19.2))
        bezier6Path.addCurve(to: CGPoint(x: 150.05, y: 18.4), controlPoint1: CGPoint(x: 150.6, y: 18.55), controlPoint2: CGPoint(x: 150.34, y: 18.42))
        bezier6Path.addLine(to: CGPoint(x: 133.1, y: 17.54))
        bezier6Path.addLine(to: CGPoint(x: 126.93, y: 1.64))
        bezier6Path.addLine(to: CGPoint(x: 126.93, y: 1.64))
        bezier6Path.addCurve(to: CGPoint(x: 126, y: 1), controlPoint1: CGPoint(x: 126.78, y: 1.26), controlPoint2: CGPoint(x: 126.41, y: 1))
        bezier6Path.close()
        bezier6Path.move(to: CGPoint(x: 176, y: 1))
        bezier6Path.addLine(to: CGPoint(x: 176, y: 1))
        bezier6Path.addCurve(to: CGPoint(x: 175.07, y: 1.64), controlPoint1: CGPoint(x: 175.59, y: 1), controlPoint2: CGPoint(x: 175.22, y: 1.26))
        bezier6Path.addLine(to: CGPoint(x: 168.9, y: 17.54))
        bezier6Path.addLine(to: CGPoint(x: 151.95, y: 18.4))
        bezier6Path.addLine(to: CGPoint(x: 151.95, y: 18.4))
        bezier6Path.addCurve(to: CGPoint(x: 151, y: 19.45), controlPoint1: CGPoint(x: 151.4, y: 18.43), controlPoint2: CGPoint(x: 150.97, y: 18.9))
        bezier6Path.addCurve(to: CGPoint(x: 151.37, y: 20.18), controlPoint1: CGPoint(x: 151.02, y: 19.73), controlPoint2: CGPoint(x: 151.15, y: 20))
        bezier6Path.addLine(to: CGPoint(x: 164.57, y: 30.97))
        bezier6Path.addLine(to: CGPoint(x: 160.23, y: 47.34))
        bezier6Path.addLine(to: CGPoint(x: 160.23, y: 47.34))
        bezier6Path.addCurve(to: CGPoint(x: 160.94, y: 48.57), controlPoint1: CGPoint(x: 160.09, y: 47.88), controlPoint2: CGPoint(x: 160.41, y: 48.42))
        bezier6Path.addCurve(to: CGPoint(x: 161.74, y: 48.44), controlPoint1: CGPoint(x: 161.21, y: 48.64), controlPoint2: CGPoint(x: 161.51, y: 48.59))
        bezier6Path.addLine(to: CGPoint(x: 176, y: 39.29))
        bezier6Path.addLine(to: CGPoint(x: 190.26, y: 48.44))
        bezier6Path.addLine(to: CGPoint(x: 190.26, y: 48.44))
        bezier6Path.addCurve(to: CGPoint(x: 191.64, y: 48.15), controlPoint1: CGPoint(x: 190.72, y: 48.74), controlPoint2: CGPoint(x: 191.34, y: 48.61))
        bezier6Path.addCurve(to: CGPoint(x: 191.77, y: 47.34), controlPoint1: CGPoint(x: 191.79, y: 47.91), controlPoint2: CGPoint(x: 191.84, y: 47.62))
        bezier6Path.addLine(to: CGPoint(x: 187.43, y: 30.97))
        bezier6Path.addLine(to: CGPoint(x: 200.63, y: 20.17))
        bezier6Path.addLine(to: CGPoint(x: 200.63, y: 20.18))
        bezier6Path.addCurve(to: CGPoint(x: 200.78, y: 18.77), controlPoint1: CGPoint(x: 201.06, y: 19.83), controlPoint2: CGPoint(x: 201.13, y: 19.2))
        bezier6Path.addCurve(to: CGPoint(x: 200.05, y: 18.4), controlPoint1: CGPoint(x: 200.6, y: 18.55), controlPoint2: CGPoint(x: 200.34, y: 18.42))
        bezier6Path.addLine(to: CGPoint(x: 183.1, y: 17.54))
        bezier6Path.addLine(to: CGPoint(x: 176.93, y: 1.64))
        bezier6Path.addLine(to: CGPoint(x: 176.93, y: 1.64))
        bezier6Path.addCurve(to: CGPoint(x: 176, y: 1), controlPoint1: CGPoint(x: 176.78, y: 1.26), controlPoint2: CGPoint(x: 176.41, y: 1))
        bezier6Path.close()
        bezier6Path.move(to: CGPoint(x: 226, y: 1))
        bezier6Path.addLine(to: CGPoint(x: 226, y: 1))
        bezier6Path.addCurve(to: CGPoint(x: 225.07, y: 1.64), controlPoint1: CGPoint(x: 225.59, y: 1), controlPoint2: CGPoint(x: 225.22, y: 1.26))
        bezier6Path.addLine(to: CGPoint(x: 218.9, y: 17.54))
        bezier6Path.addLine(to: CGPoint(x: 201.95, y: 18.4))
        bezier6Path.addLine(to: CGPoint(x: 201.95, y: 18.4))
        bezier6Path.addCurve(to: CGPoint(x: 201, y: 19.45), controlPoint1: CGPoint(x: 201.4, y: 18.43), controlPoint2: CGPoint(x: 200.97, y: 18.9))
        bezier6Path.addCurve(to: CGPoint(x: 201.37, y: 20.18), controlPoint1: CGPoint(x: 201.02, y: 19.73), controlPoint2: CGPoint(x: 201.15, y: 20))
        bezier6Path.addLine(to: CGPoint(x: 214.57, y: 30.97))
        bezier6Path.addLine(to: CGPoint(x: 210.23, y: 47.34))
        bezier6Path.addLine(to: CGPoint(x: 210.23, y: 47.34))
        bezier6Path.addCurve(to: CGPoint(x: 210.94, y: 48.57), controlPoint1: CGPoint(x: 210.09, y: 47.88), controlPoint2: CGPoint(x: 210.41, y: 48.42))
        bezier6Path.addCurve(to: CGPoint(x: 211.74, y: 48.44), controlPoint1: CGPoint(x: 211.21, y: 48.64), controlPoint2: CGPoint(x: 211.51, y: 48.59))
        bezier6Path.addLine(to: CGPoint(x: 226, y: 39.29))
        bezier6Path.addLine(to: CGPoint(x: 240.26, y: 48.44))
        bezier6Path.addLine(to: CGPoint(x: 240.26, y: 48.44))
        bezier6Path.addCurve(to: CGPoint(x: 241.64, y: 48.15), controlPoint1: CGPoint(x: 240.72, y: 48.74), controlPoint2: CGPoint(x: 241.34, y: 48.61))
        bezier6Path.addCurve(to: CGPoint(x: 241.77, y: 47.34), controlPoint1: CGPoint(x: 241.79, y: 47.91), controlPoint2: CGPoint(x: 241.84, y: 47.62))
        bezier6Path.addLine(to: CGPoint(x: 237.43, y: 30.97))
        bezier6Path.addLine(to: CGPoint(x: 250.63, y: 20.17))
        bezier6Path.addLine(to: CGPoint(x: 250.63, y: 20.18))
        bezier6Path.addCurve(to: CGPoint(x: 250.78, y: 18.77), controlPoint1: CGPoint(x: 251.06, y: 19.83), controlPoint2: CGPoint(x: 251.13, y: 19.2))
        bezier6Path.addCurve(to: CGPoint(x: 250.05, y: 18.4), controlPoint1: CGPoint(x: 250.6, y: 18.55), controlPoint2: CGPoint(x: 250.34, y: 18.42))
        bezier6Path.addLine(to: CGPoint(x: 233.1, y: 17.54))
        bezier6Path.addLine(to: CGPoint(x: 226.93, y: 1.64))
        bezier6Path.addLine(to: CGPoint(x: 226.93, y: 1.64))
        bezier6Path.addCurve(to: CGPoint(x: 226, y: 1), controlPoint1: CGPoint(x: 226.78, y: 1.26), controlPoint2: CGPoint(x: 226.41, y: 1))
        bezier6Path.close()
        color.setFill()
        bezier6Path.fill()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 26, y: 1))
        bezierPath.addLine(to: CGPoint(x: 26, y: 1))
        bezierPath.addCurve(to: CGPoint(x: 25.07, y: 1.64), controlPoint1: CGPoint(x: 25.59, y: 1), controlPoint2: CGPoint(x: 25.22, y: 1.26))
        bezierPath.addLine(to: CGPoint(x: 18.9, y: 17.54))
        bezierPath.addLine(to: CGPoint(x: 1.95, y: 18.4))
        bezierPath.addLine(to: CGPoint(x: 1.95, y: 18.4))
        bezierPath.addCurve(to: CGPoint(x: 1, y: 19.45), controlPoint1: CGPoint(x: 1.4, y: 18.43), controlPoint2: CGPoint(x: 0.97, y: 18.9))
        bezierPath.addCurve(to: CGPoint(x: 1.37, y: 20.18), controlPoint1: CGPoint(x: 1.02, y: 19.73), controlPoint2: CGPoint(x: 1.15, y: 20))
        bezierPath.addLine(to: CGPoint(x: 14.57, y: 30.97))
        bezierPath.addLine(to: CGPoint(x: 10.23, y: 47.34))
        bezierPath.addLine(to: CGPoint(x: 10.23, y: 47.34))
        bezierPath.addCurve(to: CGPoint(x: 10.94, y: 48.57), controlPoint1: CGPoint(x: 10.09, y: 47.88), controlPoint2: CGPoint(x: 10.41, y: 48.42))
        bezierPath.addCurve(to: CGPoint(x: 11.74, y: 48.44), controlPoint1: CGPoint(x: 11.21, y: 48.64), controlPoint2: CGPoint(x: 11.51, y: 48.59))
        bezierPath.addLine(to: CGPoint(x: 26, y: 39.29))
        bezierPath.addLine(to: CGPoint(x: 40.26, y: 48.44))
        bezierPath.addLine(to: CGPoint(x: 40.26, y: 48.44))
        bezierPath.addCurve(to: CGPoint(x: 41.64, y: 48.15), controlPoint1: CGPoint(x: 40.72, y: 48.74), controlPoint2: CGPoint(x: 41.34, y: 48.61))
        bezierPath.addCurve(to: CGPoint(x: 41.77, y: 47.34), controlPoint1: CGPoint(x: 41.79, y: 47.91), controlPoint2: CGPoint(x: 41.84, y: 47.62))
        bezierPath.addLine(to: CGPoint(x: 37.43, y: 30.97))
        bezierPath.addLine(to: CGPoint(x: 50.63, y: 20.17))
        bezierPath.addLine(to: CGPoint(x: 50.63, y: 20.18))
        bezierPath.addCurve(to: CGPoint(x: 50.78, y: 18.77), controlPoint1: CGPoint(x: 51.06, y: 19.83), controlPoint2: CGPoint(x: 51.13, y: 19.2))
        bezierPath.addCurve(to: CGPoint(x: 50.05, y: 18.4), controlPoint1: CGPoint(x: 50.6, y: 18.55), controlPoint2: CGPoint(x: 50.34, y: 18.42))
        bezierPath.addLine(to: CGPoint(x: 33.1, y: 17.54))
        bezierPath.addLine(to: CGPoint(x: 26.93, y: 1.64))
        bezierPath.addLine(to: CGPoint(x: 26.93, y: 1.64))
        bezierPath.addCurve(to: CGPoint(x: 26, y: 1), controlPoint1: CGPoint(x: 26.78, y: 1.26), controlPoint2: CGPoint(x: 26.41, y: 1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 26, y: 4.76))
        bezierPath.addLine(to: CGPoint(x: 31.47, y: 18.86))
        bezierPath.addLine(to: CGPoint(x: 31.47, y: 18.86))
        bezierPath.addCurve(to: CGPoint(x: 32.35, y: 19.5), controlPoint1: CGPoint(x: 31.61, y: 19.23), controlPoint2: CGPoint(x: 31.95, y: 19.48))
        bezierPath.addLine(to: CGPoint(x: 47.36, y: 20.27))
        bezierPath.addLine(to: CGPoint(x: 35.67, y: 29.83))
        bezierPath.addLine(to: CGPoint(x: 35.67, y: 29.82))
        bezierPath.addCurve(to: CGPoint(x: 35.33, y: 30.86), controlPoint1: CGPoint(x: 35.36, y: 30.07), controlPoint2: CGPoint(x: 35.23, y: 30.48))
        bezierPath.addLine(to: CGPoint(x: 39.18, y: 45.37))
        bezierPath.addLine(to: CGPoint(x: 26.54, y: 37.26))
        bezierPath.addLine(to: CGPoint(x: 26.54, y: 37.26))
        bezierPath.addCurve(to: CGPoint(x: 25.47, y: 37.25), controlPoint1: CGPoint(x: 26.22, y: 37.05), controlPoint2: CGPoint(x: 25.8, y: 37.04))
        bezierPath.addLine(to: CGPoint(x: 12.82, y: 45.37))
        bezierPath.addLine(to: CGPoint(x: 16.67, y: 30.86))
        bezierPath.addLine(to: CGPoint(x: 16.67, y: 30.86))
        bezierPath.addCurve(to: CGPoint(x: 16.33, y: 29.82), controlPoint1: CGPoint(x: 16.77, y: 30.48), controlPoint2: CGPoint(x: 16.64, y: 30.07))
        bezierPath.addLine(to: CGPoint(x: 4.64, y: 20.27))
        bezierPath.addLine(to: CGPoint(x: 19.65, y: 19.5))
        bezierPath.addLine(to: CGPoint(x: 19.65, y: 19.5))
        bezierPath.addCurve(to: CGPoint(x: 20.53, y: 18.86), controlPoint1: CGPoint(x: 20.05, y: 19.48), controlPoint2: CGPoint(x: 20.39, y: 19.23))
        bezierPath.addLine(to: CGPoint(x: 26, y: 4.76))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 76, y: 1))
        bezierPath.addLine(to: CGPoint(x: 76, y: 1))
        bezierPath.addCurve(to: CGPoint(x: 75.07, y: 1.64), controlPoint1: CGPoint(x: 75.59, y: 1), controlPoint2: CGPoint(x: 75.22, y: 1.26))
        bezierPath.addLine(to: CGPoint(x: 68.9, y: 17.54))
        bezierPath.addLine(to: CGPoint(x: 51.95, y: 18.4))
        bezierPath.addLine(to: CGPoint(x: 51.95, y: 18.4))
        bezierPath.addCurve(to: CGPoint(x: 51, y: 19.45), controlPoint1: CGPoint(x: 51.4, y: 18.43), controlPoint2: CGPoint(x: 50.97, y: 18.9))
        bezierPath.addCurve(to: CGPoint(x: 51.37, y: 20.18), controlPoint1: CGPoint(x: 51.02, y: 19.73), controlPoint2: CGPoint(x: 51.15, y: 20))
        bezierPath.addLine(to: CGPoint(x: 64.57, y: 30.97))
        bezierPath.addLine(to: CGPoint(x: 60.23, y: 47.34))
        bezierPath.addLine(to: CGPoint(x: 60.23, y: 47.34))
        bezierPath.addCurve(to: CGPoint(x: 60.94, y: 48.57), controlPoint1: CGPoint(x: 60.09, y: 47.88), controlPoint2: CGPoint(x: 60.41, y: 48.42))
        bezierPath.addCurve(to: CGPoint(x: 61.74, y: 48.44), controlPoint1: CGPoint(x: 61.21, y: 48.64), controlPoint2: CGPoint(x: 61.51, y: 48.59))
        bezierPath.addLine(to: CGPoint(x: 76, y: 39.29))
        bezierPath.addLine(to: CGPoint(x: 90.26, y: 48.44))
        bezierPath.addLine(to: CGPoint(x: 90.26, y: 48.44))
        bezierPath.addCurve(to: CGPoint(x: 91.64, y: 48.15), controlPoint1: CGPoint(x: 90.72, y: 48.74), controlPoint2: CGPoint(x: 91.34, y: 48.61))
        bezierPath.addCurve(to: CGPoint(x: 91.77, y: 47.34), controlPoint1: CGPoint(x: 91.79, y: 47.91), controlPoint2: CGPoint(x: 91.84, y: 47.62))
        bezierPath.addLine(to: CGPoint(x: 87.43, y: 30.97))
        bezierPath.addLine(to: CGPoint(x: 100.63, y: 20.17))
        bezierPath.addLine(to: CGPoint(x: 100.63, y: 20.18))
        bezierPath.addCurve(to: CGPoint(x: 100.78, y: 18.77), controlPoint1: CGPoint(x: 101.06, y: 19.83), controlPoint2: CGPoint(x: 101.13, y: 19.2))
        bezierPath.addCurve(to: CGPoint(x: 100.05, y: 18.4), controlPoint1: CGPoint(x: 100.6, y: 18.55), controlPoint2: CGPoint(x: 100.34, y: 18.42))
        bezierPath.addLine(to: CGPoint(x: 83.1, y: 17.54))
        bezierPath.addLine(to: CGPoint(x: 76.93, y: 1.64))
        bezierPath.addLine(to: CGPoint(x: 76.93, y: 1.64))
        bezierPath.addCurve(to: CGPoint(x: 76, y: 1), controlPoint1: CGPoint(x: 76.78, y: 1.26), controlPoint2: CGPoint(x: 76.41, y: 1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 76, y: 4.76))
        bezierPath.addLine(to: CGPoint(x: 81.47, y: 18.86))
        bezierPath.addLine(to: CGPoint(x: 81.47, y: 18.86))
        bezierPath.addCurve(to: CGPoint(x: 82.35, y: 19.5), controlPoint1: CGPoint(x: 81.61, y: 19.23), controlPoint2: CGPoint(x: 81.95, y: 19.48))
        bezierPath.addLine(to: CGPoint(x: 97.36, y: 20.27))
        bezierPath.addLine(to: CGPoint(x: 85.67, y: 29.83))
        bezierPath.addLine(to: CGPoint(x: 85.67, y: 29.82))
        bezierPath.addCurve(to: CGPoint(x: 85.33, y: 30.86), controlPoint1: CGPoint(x: 85.36, y: 30.07), controlPoint2: CGPoint(x: 85.23, y: 30.48))
        bezierPath.addLine(to: CGPoint(x: 89.18, y: 45.37))
        bezierPath.addLine(to: CGPoint(x: 76.54, y: 37.26))
        bezierPath.addLine(to: CGPoint(x: 76.54, y: 37.26))
        bezierPath.addCurve(to: CGPoint(x: 75.47, y: 37.25), controlPoint1: CGPoint(x: 76.22, y: 37.05), controlPoint2: CGPoint(x: 75.8, y: 37.04))
        bezierPath.addLine(to: CGPoint(x: 62.82, y: 45.37))
        bezierPath.addLine(to: CGPoint(x: 66.67, y: 30.86))
        bezierPath.addLine(to: CGPoint(x: 66.67, y: 30.86))
        bezierPath.addCurve(to: CGPoint(x: 66.33, y: 29.82), controlPoint1: CGPoint(x: 66.77, y: 30.48), controlPoint2: CGPoint(x: 66.64, y: 30.07))
        bezierPath.addLine(to: CGPoint(x: 54.64, y: 20.27))
        bezierPath.addLine(to: CGPoint(x: 69.65, y: 19.5))
        bezierPath.addLine(to: CGPoint(x: 69.65, y: 19.5))
        bezierPath.addCurve(to: CGPoint(x: 70.53, y: 18.86), controlPoint1: CGPoint(x: 70.05, y: 19.48), controlPoint2: CGPoint(x: 70.39, y: 19.23))
        bezierPath.addLine(to: CGPoint(x: 76, y: 4.76))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 126, y: 1))
        bezierPath.addLine(to: CGPoint(x: 126, y: 1))
        bezierPath.addCurve(to: CGPoint(x: 125.07, y: 1.64), controlPoint1: CGPoint(x: 125.59, y: 1), controlPoint2: CGPoint(x: 125.22, y: 1.26))
        bezierPath.addLine(to: CGPoint(x: 118.9, y: 17.54))
        bezierPath.addLine(to: CGPoint(x: 101.95, y: 18.4))
        bezierPath.addLine(to: CGPoint(x: 101.95, y: 18.4))
        bezierPath.addCurve(to: CGPoint(x: 101, y: 19.45), controlPoint1: CGPoint(x: 101.4, y: 18.43), controlPoint2: CGPoint(x: 100.97, y: 18.9))
        bezierPath.addCurve(to: CGPoint(x: 101.37, y: 20.18), controlPoint1: CGPoint(x: 101.02, y: 19.73), controlPoint2: CGPoint(x: 101.15, y: 20))
        bezierPath.addLine(to: CGPoint(x: 114.57, y: 30.97))
        bezierPath.addLine(to: CGPoint(x: 110.23, y: 47.34))
        bezierPath.addLine(to: CGPoint(x: 110.23, y: 47.34))
        bezierPath.addCurve(to: CGPoint(x: 110.94, y: 48.57), controlPoint1: CGPoint(x: 110.09, y: 47.88), controlPoint2: CGPoint(x: 110.41, y: 48.42))
        bezierPath.addCurve(to: CGPoint(x: 111.74, y: 48.44), controlPoint1: CGPoint(x: 111.21, y: 48.64), controlPoint2: CGPoint(x: 111.51, y: 48.59))
        bezierPath.addLine(to: CGPoint(x: 126, y: 39.29))
        bezierPath.addLine(to: CGPoint(x: 140.26, y: 48.44))
        bezierPath.addLine(to: CGPoint(x: 140.26, y: 48.44))
        bezierPath.addCurve(to: CGPoint(x: 141.64, y: 48.15), controlPoint1: CGPoint(x: 140.72, y: 48.74), controlPoint2: CGPoint(x: 141.34, y: 48.61))
        bezierPath.addCurve(to: CGPoint(x: 141.77, y: 47.34), controlPoint1: CGPoint(x: 141.79, y: 47.91), controlPoint2: CGPoint(x: 141.84, y: 47.62))
        bezierPath.addLine(to: CGPoint(x: 137.43, y: 30.97))
        bezierPath.addLine(to: CGPoint(x: 150.63, y: 20.17))
        bezierPath.addLine(to: CGPoint(x: 150.63, y: 20.18))
        bezierPath.addCurve(to: CGPoint(x: 150.78, y: 18.77), controlPoint1: CGPoint(x: 151.06, y: 19.83), controlPoint2: CGPoint(x: 151.13, y: 19.2))
        bezierPath.addCurve(to: CGPoint(x: 150.05, y: 18.4), controlPoint1: CGPoint(x: 150.6, y: 18.55), controlPoint2: CGPoint(x: 150.34, y: 18.42))
        bezierPath.addLine(to: CGPoint(x: 133.1, y: 17.54))
        bezierPath.addLine(to: CGPoint(x: 126.93, y: 1.64))
        bezierPath.addLine(to: CGPoint(x: 126.93, y: 1.64))
        bezierPath.addCurve(to: CGPoint(x: 126, y: 1), controlPoint1: CGPoint(x: 126.78, y: 1.26), controlPoint2: CGPoint(x: 126.41, y: 1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 126, y: 4.76))
        bezierPath.addLine(to: CGPoint(x: 131.47, y: 18.86))
        bezierPath.addLine(to: CGPoint(x: 131.47, y: 18.86))
        bezierPath.addCurve(to: CGPoint(x: 132.35, y: 19.5), controlPoint1: CGPoint(x: 131.61, y: 19.23), controlPoint2: CGPoint(x: 131.95, y: 19.48))
        bezierPath.addLine(to: CGPoint(x: 147.36, y: 20.27))
        bezierPath.addLine(to: CGPoint(x: 135.67, y: 29.83))
        bezierPath.addLine(to: CGPoint(x: 135.67, y: 29.82))
        bezierPath.addCurve(to: CGPoint(x: 135.33, y: 30.86), controlPoint1: CGPoint(x: 135.36, y: 30.07), controlPoint2: CGPoint(x: 135.23, y: 30.48))
        bezierPath.addLine(to: CGPoint(x: 139.18, y: 45.37))
        bezierPath.addLine(to: CGPoint(x: 126.54, y: 37.26))
        bezierPath.addLine(to: CGPoint(x: 126.54, y: 37.26))
        bezierPath.addCurve(to: CGPoint(x: 125.47, y: 37.25), controlPoint1: CGPoint(x: 126.22, y: 37.05), controlPoint2: CGPoint(x: 125.8, y: 37.04))
        bezierPath.addLine(to: CGPoint(x: 112.82, y: 45.37))
        bezierPath.addLine(to: CGPoint(x: 116.67, y: 30.86))
        bezierPath.addLine(to: CGPoint(x: 116.67, y: 30.86))
        bezierPath.addCurve(to: CGPoint(x: 116.33, y: 29.82), controlPoint1: CGPoint(x: 116.77, y: 30.48), controlPoint2: CGPoint(x: 116.64, y: 30.07))
        bezierPath.addLine(to: CGPoint(x: 104.64, y: 20.27))
        bezierPath.addLine(to: CGPoint(x: 119.65, y: 19.5))
        bezierPath.addLine(to: CGPoint(x: 119.65, y: 19.5))
        bezierPath.addCurve(to: CGPoint(x: 120.53, y: 18.86), controlPoint1: CGPoint(x: 120.05, y: 19.48), controlPoint2: CGPoint(x: 120.39, y: 19.23))
        bezierPath.addLine(to: CGPoint(x: 126, y: 4.76))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 176, y: 1))
        bezierPath.addLine(to: CGPoint(x: 176, y: 1))
        bezierPath.addCurve(to: CGPoint(x: 175.07, y: 1.64), controlPoint1: CGPoint(x: 175.59, y: 1), controlPoint2: CGPoint(x: 175.22, y: 1.26))
        bezierPath.addLine(to: CGPoint(x: 168.9, y: 17.54))
        bezierPath.addLine(to: CGPoint(x: 151.95, y: 18.4))
        bezierPath.addLine(to: CGPoint(x: 151.95, y: 18.4))
        bezierPath.addCurve(to: CGPoint(x: 151, y: 19.45), controlPoint1: CGPoint(x: 151.4, y: 18.43), controlPoint2: CGPoint(x: 150.97, y: 18.9))
        bezierPath.addCurve(to: CGPoint(x: 151.37, y: 20.18), controlPoint1: CGPoint(x: 151.02, y: 19.73), controlPoint2: CGPoint(x: 151.15, y: 20))
        bezierPath.addLine(to: CGPoint(x: 164.57, y: 30.97))
        bezierPath.addLine(to: CGPoint(x: 160.23, y: 47.34))
        bezierPath.addLine(to: CGPoint(x: 160.23, y: 47.34))
        bezierPath.addCurve(to: CGPoint(x: 160.94, y: 48.57), controlPoint1: CGPoint(x: 160.09, y: 47.88), controlPoint2: CGPoint(x: 160.41, y: 48.42))
        bezierPath.addCurve(to: CGPoint(x: 161.74, y: 48.44), controlPoint1: CGPoint(x: 161.21, y: 48.64), controlPoint2: CGPoint(x: 161.51, y: 48.59))
        bezierPath.addLine(to: CGPoint(x: 176, y: 39.29))
        bezierPath.addLine(to: CGPoint(x: 190.26, y: 48.44))
        bezierPath.addLine(to: CGPoint(x: 190.26, y: 48.44))
        bezierPath.addCurve(to: CGPoint(x: 191.64, y: 48.15), controlPoint1: CGPoint(x: 190.72, y: 48.74), controlPoint2: CGPoint(x: 191.34, y: 48.61))
        bezierPath.addCurve(to: CGPoint(x: 191.77, y: 47.34), controlPoint1: CGPoint(x: 191.79, y: 47.91), controlPoint2: CGPoint(x: 191.84, y: 47.62))
        bezierPath.addLine(to: CGPoint(x: 187.43, y: 30.97))
        bezierPath.addLine(to: CGPoint(x: 200.63, y: 20.17))
        bezierPath.addLine(to: CGPoint(x: 200.63, y: 20.18))
        bezierPath.addCurve(to: CGPoint(x: 200.78, y: 18.77), controlPoint1: CGPoint(x: 201.06, y: 19.83), controlPoint2: CGPoint(x: 201.13, y: 19.2))
        bezierPath.addCurve(to: CGPoint(x: 200.05, y: 18.4), controlPoint1: CGPoint(x: 200.6, y: 18.55), controlPoint2: CGPoint(x: 200.34, y: 18.42))
        bezierPath.addLine(to: CGPoint(x: 183.1, y: 17.54))
        bezierPath.addLine(to: CGPoint(x: 176.93, y: 1.64))
        bezierPath.addLine(to: CGPoint(x: 176.93, y: 1.64))
        bezierPath.addCurve(to: CGPoint(x: 176, y: 1), controlPoint1: CGPoint(x: 176.78, y: 1.26), controlPoint2: CGPoint(x: 176.41, y: 1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 176, y: 4.76))
        bezierPath.addLine(to: CGPoint(x: 181.47, y: 18.86))
        bezierPath.addLine(to: CGPoint(x: 181.47, y: 18.86))
        bezierPath.addCurve(to: CGPoint(x: 182.35, y: 19.5), controlPoint1: CGPoint(x: 181.61, y: 19.23), controlPoint2: CGPoint(x: 181.95, y: 19.48))
        bezierPath.addLine(to: CGPoint(x: 197.36, y: 20.27))
        bezierPath.addLine(to: CGPoint(x: 185.67, y: 29.83))
        bezierPath.addLine(to: CGPoint(x: 185.67, y: 29.82))
        bezierPath.addCurve(to: CGPoint(x: 185.33, y: 30.86), controlPoint1: CGPoint(x: 185.36, y: 30.07), controlPoint2: CGPoint(x: 185.23, y: 30.48))
        bezierPath.addLine(to: CGPoint(x: 189.18, y: 45.37))
        bezierPath.addLine(to: CGPoint(x: 176.54, y: 37.26))
        bezierPath.addLine(to: CGPoint(x: 176.54, y: 37.26))
        bezierPath.addCurve(to: CGPoint(x: 175.47, y: 37.25), controlPoint1: CGPoint(x: 176.22, y: 37.05), controlPoint2: CGPoint(x: 175.8, y: 37.04))
        bezierPath.addLine(to: CGPoint(x: 162.82, y: 45.37))
        bezierPath.addLine(to: CGPoint(x: 166.67, y: 30.86))
        bezierPath.addLine(to: CGPoint(x: 166.67, y: 30.86))
        bezierPath.addCurve(to: CGPoint(x: 166.33, y: 29.82), controlPoint1: CGPoint(x: 166.77, y: 30.48), controlPoint2: CGPoint(x: 166.64, y: 30.07))
        bezierPath.addLine(to: CGPoint(x: 154.64, y: 20.27))
        bezierPath.addLine(to: CGPoint(x: 169.65, y: 19.5))
        bezierPath.addLine(to: CGPoint(x: 169.65, y: 19.5))
        bezierPath.addCurve(to: CGPoint(x: 170.53, y: 18.86), controlPoint1: CGPoint(x: 170.05, y: 19.48), controlPoint2: CGPoint(x: 170.39, y: 19.23))
        bezierPath.addLine(to: CGPoint(x: 176, y: 4.76))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 226, y: 1))
        bezierPath.addLine(to: CGPoint(x: 226, y: 1))
        bezierPath.addCurve(to: CGPoint(x: 225.07, y: 1.64), controlPoint1: CGPoint(x: 225.59, y: 1), controlPoint2: CGPoint(x: 225.22, y: 1.26))
        bezierPath.addLine(to: CGPoint(x: 218.9, y: 17.54))
        bezierPath.addLine(to: CGPoint(x: 201.95, y: 18.4))
        bezierPath.addLine(to: CGPoint(x: 201.95, y: 18.4))
        bezierPath.addCurve(to: CGPoint(x: 201, y: 19.45), controlPoint1: CGPoint(x: 201.4, y: 18.43), controlPoint2: CGPoint(x: 200.97, y: 18.9))
        bezierPath.addCurve(to: CGPoint(x: 201.37, y: 20.18), controlPoint1: CGPoint(x: 201.02, y: 19.73), controlPoint2: CGPoint(x: 201.15, y: 20))
        bezierPath.addLine(to: CGPoint(x: 214.57, y: 30.97))
        bezierPath.addLine(to: CGPoint(x: 210.23, y: 47.34))
        bezierPath.addLine(to: CGPoint(x: 210.23, y: 47.34))
        bezierPath.addCurve(to: CGPoint(x: 210.94, y: 48.57), controlPoint1: CGPoint(x: 210.09, y: 47.88), controlPoint2: CGPoint(x: 210.41, y: 48.42))
        bezierPath.addCurve(to: CGPoint(x: 211.74, y: 48.44), controlPoint1: CGPoint(x: 211.21, y: 48.64), controlPoint2: CGPoint(x: 211.51, y: 48.59))
        bezierPath.addLine(to: CGPoint(x: 226, y: 39.29))
        bezierPath.addLine(to: CGPoint(x: 240.26, y: 48.44))
        bezierPath.addLine(to: CGPoint(x: 240.26, y: 48.44))
        bezierPath.addCurve(to: CGPoint(x: 241.64, y: 48.15), controlPoint1: CGPoint(x: 240.72, y: 48.74), controlPoint2: CGPoint(x: 241.34, y: 48.61))
        bezierPath.addCurve(to: CGPoint(x: 241.77, y: 47.34), controlPoint1: CGPoint(x: 241.79, y: 47.91), controlPoint2: CGPoint(x: 241.84, y: 47.62))
        bezierPath.addLine(to: CGPoint(x: 237.43, y: 30.97))
        bezierPath.addLine(to: CGPoint(x: 250.63, y: 20.17))
        bezierPath.addLine(to: CGPoint(x: 250.63, y: 20.18))
        bezierPath.addCurve(to: CGPoint(x: 250.78, y: 18.77), controlPoint1: CGPoint(x: 251.06, y: 19.83), controlPoint2: CGPoint(x: 251.13, y: 19.2))
        bezierPath.addCurve(to: CGPoint(x: 250.05, y: 18.4), controlPoint1: CGPoint(x: 250.6, y: 18.55), controlPoint2: CGPoint(x: 250.34, y: 18.42))
        bezierPath.addLine(to: CGPoint(x: 233.1, y: 17.54))
        bezierPath.addLine(to: CGPoint(x: 226.93, y: 1.64))
        bezierPath.addLine(to: CGPoint(x: 226.93, y: 1.64))
        bezierPath.addCurve(to: CGPoint(x: 226, y: 1), controlPoint1: CGPoint(x: 226.78, y: 1.26), controlPoint2: CGPoint(x: 226.41, y: 1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 226, y: 4.76))
        bezierPath.addLine(to: CGPoint(x: 231.47, y: 18.86))
        bezierPath.addLine(to: CGPoint(x: 231.47, y: 18.86))
        bezierPath.addCurve(to: CGPoint(x: 232.35, y: 19.5), controlPoint1: CGPoint(x: 231.61, y: 19.23), controlPoint2: CGPoint(x: 231.95, y: 19.48))
        bezierPath.addLine(to: CGPoint(x: 247.36, y: 20.27))
        bezierPath.addLine(to: CGPoint(x: 235.67, y: 29.83))
        bezierPath.addLine(to: CGPoint(x: 235.67, y: 29.82))
        bezierPath.addCurve(to: CGPoint(x: 235.33, y: 30.86), controlPoint1: CGPoint(x: 235.36, y: 30.07), controlPoint2: CGPoint(x: 235.23, y: 30.48))
        bezierPath.addLine(to: CGPoint(x: 239.18, y: 45.37))
        bezierPath.addLine(to: CGPoint(x: 226.54, y: 37.26))
        bezierPath.addLine(to: CGPoint(x: 226.54, y: 37.26))
        bezierPath.addCurve(to: CGPoint(x: 225.47, y: 37.25), controlPoint1: CGPoint(x: 226.22, y: 37.05), controlPoint2: CGPoint(x: 225.8, y: 37.04))
        bezierPath.addLine(to: CGPoint(x: 212.82, y: 45.37))
        bezierPath.addLine(to: CGPoint(x: 216.67, y: 30.86))
        bezierPath.addLine(to: CGPoint(x: 216.67, y: 30.86))
        bezierPath.addCurve(to: CGPoint(x: 216.33, y: 29.82), controlPoint1: CGPoint(x: 216.77, y: 30.48), controlPoint2: CGPoint(x: 216.64, y: 30.07))
        bezierPath.addLine(to: CGPoint(x: 204.64, y: 20.27))
        bezierPath.addLine(to: CGPoint(x: 219.65, y: 19.5))
        bezierPath.addLine(to: CGPoint(x: 219.65, y: 19.5))
        bezierPath.addCurve(to: CGPoint(x: 220.53, y: 18.86), controlPoint1: CGPoint(x: 220.05, y: 19.48), controlPoint2: CGPoint(x: 220.39, y: 19.23))
        bezierPath.addLine(to: CGPoint(x: 226, y: 4.76))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 25, y: 1))
        bezier2Path.addLine(to: CGPoint(x: 25, y: 1))
        bezier2Path.addCurve(to: CGPoint(x: 24.07, y: 1.64), controlPoint1: CGPoint(x: 24.59, y: 1), controlPoint2: CGPoint(x: 24.22, y: 1.26))
        bezier2Path.addLine(to: CGPoint(x: 17.9, y: 17.54))
        bezier2Path.addLine(to: CGPoint(x: 0.95, y: 18.4))
        bezier2Path.addLine(to: CGPoint(x: 0.95, y: 18.4))
        bezier2Path.addCurve(to: CGPoint(x: 0, y: 19.45), controlPoint1: CGPoint(x: 0.4, y: 18.43), controlPoint2: CGPoint(x: -0.03, y: 18.9))
        bezier2Path.addCurve(to: CGPoint(x: 0.37, y: 20.18), controlPoint1: CGPoint(x: 0.02, y: 19.73), controlPoint2: CGPoint(x: 0.15, y: 20))
        bezier2Path.addLine(to: CGPoint(x: 13.57, y: 30.97))
        bezier2Path.addLine(to: CGPoint(x: 9.23, y: 47.34))
        bezier2Path.addLine(to: CGPoint(x: 9.23, y: 47.34))
        bezier2Path.addCurve(to: CGPoint(x: 9.94, y: 48.57), controlPoint1: CGPoint(x: 9.09, y: 47.88), controlPoint2: CGPoint(x: 9.41, y: 48.42))
        bezier2Path.addCurve(to: CGPoint(x: 10.74, y: 48.44), controlPoint1: CGPoint(x: 10.21, y: 48.64), controlPoint2: CGPoint(x: 10.51, y: 48.59))
        bezier2Path.addLine(to: CGPoint(x: 25, y: 39.29))
        bezier2Path.addLine(to: CGPoint(x: 39.26, y: 48.44))
        bezier2Path.addLine(to: CGPoint(x: 39.26, y: 48.44))
        bezier2Path.addCurve(to: CGPoint(x: 40.64, y: 48.15), controlPoint1: CGPoint(x: 39.72, y: 48.74), controlPoint2: CGPoint(x: 40.34, y: 48.61))
        bezier2Path.addCurve(to: CGPoint(x: 40.77, y: 47.34), controlPoint1: CGPoint(x: 40.79, y: 47.91), controlPoint2: CGPoint(x: 40.84, y: 47.62))
        bezier2Path.addLine(to: CGPoint(x: 36.43, y: 30.97))
        bezier2Path.addLine(to: CGPoint(x: 49.63, y: 20.17))
        bezier2Path.addLine(to: CGPoint(x: 49.63, y: 20.18))
        bezier2Path.addCurve(to: CGPoint(x: 49.78, y: 18.77), controlPoint1: CGPoint(x: 50.06, y: 19.83), controlPoint2: CGPoint(x: 50.13, y: 19.2))
        bezier2Path.addCurve(to: CGPoint(x: 49.05, y: 18.4), controlPoint1: CGPoint(x: 49.6, y: 18.55), controlPoint2: CGPoint(x: 49.34, y: 18.42))
        bezier2Path.addLine(to: CGPoint(x: 32.1, y: 17.54))
        bezier2Path.addLine(to: CGPoint(x: 25.93, y: 1.64))
        bezier2Path.addLine(to: CGPoint(x: 25.93, y: 1.64))
        bezier2Path.addCurve(to: CGPoint(x: 25, y: 1), controlPoint1: CGPoint(x: 25.78, y: 1.26), controlPoint2: CGPoint(x: 25.41, y: 1))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 25, y: 4.76))
        bezier2Path.addLine(to: CGPoint(x: 30.47, y: 18.86))
        bezier2Path.addLine(to: CGPoint(x: 30.47, y: 18.86))
        bezier2Path.addCurve(to: CGPoint(x: 31.35, y: 19.5), controlPoint1: CGPoint(x: 30.61, y: 19.23), controlPoint2: CGPoint(x: 30.95, y: 19.48))
        bezier2Path.addLine(to: CGPoint(x: 46.36, y: 20.27))
        bezier2Path.addLine(to: CGPoint(x: 34.67, y: 29.83))
        bezier2Path.addLine(to: CGPoint(x: 34.67, y: 29.82))
        bezier2Path.addCurve(to: CGPoint(x: 34.33, y: 30.86), controlPoint1: CGPoint(x: 34.36, y: 30.07), controlPoint2: CGPoint(x: 34.23, y: 30.48))
        bezier2Path.addLine(to: CGPoint(x: 38.18, y: 45.37))
        bezier2Path.addLine(to: CGPoint(x: 25.54, y: 37.26))
        bezier2Path.addLine(to: CGPoint(x: 25.54, y: 37.26))
        bezier2Path.addCurve(to: CGPoint(x: 24.47, y: 37.25), controlPoint1: CGPoint(x: 25.22, y: 37.05), controlPoint2: CGPoint(x: 24.8, y: 37.04))
        bezier2Path.addLine(to: CGPoint(x: 11.82, y: 45.37))
        bezier2Path.addLine(to: CGPoint(x: 15.67, y: 30.86))
        bezier2Path.addLine(to: CGPoint(x: 15.67, y: 30.86))
        bezier2Path.addCurve(to: CGPoint(x: 15.33, y: 29.82), controlPoint1: CGPoint(x: 15.77, y: 30.48), controlPoint2: CGPoint(x: 15.64, y: 30.07))
        bezier2Path.addLine(to: CGPoint(x: 3.64, y: 20.27))
        bezier2Path.addLine(to: CGPoint(x: 18.65, y: 19.5))
        bezier2Path.addLine(to: CGPoint(x: 18.65, y: 19.5))
        bezier2Path.addCurve(to: CGPoint(x: 19.53, y: 18.86), controlPoint1: CGPoint(x: 19.05, y: 19.48), controlPoint2: CGPoint(x: 19.39, y: 19.23))
        bezier2Path.addLine(to: CGPoint(x: 25, y: 4.76))
        bezier2Path.close()
        fillColor.setFill()
        bezier2Path.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawIcons8starCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 25, y: 1))
        bezierPath.addLine(to: CGPoint(x: 25, y: 1))
        bezierPath.addCurve(to: CGPoint(x: 24.07, y: 1.64), controlPoint1: CGPoint(x: 24.59, y: 1), controlPoint2: CGPoint(x: 24.22, y: 1.26))
        bezierPath.addLine(to: CGPoint(x: 17.9, y: 17.54))
        bezierPath.addLine(to: CGPoint(x: 0.95, y: 18.4))
        bezierPath.addLine(to: CGPoint(x: 0.95, y: 18.4))
        bezierPath.addCurve(to: CGPoint(x: 0, y: 19.45), controlPoint1: CGPoint(x: 0.4, y: 18.43), controlPoint2: CGPoint(x: -0.03, y: 18.9))
        bezierPath.addCurve(to: CGPoint(x: 0.37, y: 20.18), controlPoint1: CGPoint(x: 0.02, y: 19.73), controlPoint2: CGPoint(x: 0.15, y: 20))
        bezierPath.addLine(to: CGPoint(x: 13.57, y: 30.97))
        bezierPath.addLine(to: CGPoint(x: 9.23, y: 47.34))
        bezierPath.addLine(to: CGPoint(x: 9.23, y: 47.34))
        bezierPath.addCurve(to: CGPoint(x: 9.94, y: 48.57), controlPoint1: CGPoint(x: 9.09, y: 47.88), controlPoint2: CGPoint(x: 9.41, y: 48.42))
        bezierPath.addCurve(to: CGPoint(x: 10.74, y: 48.44), controlPoint1: CGPoint(x: 10.21, y: 48.64), controlPoint2: CGPoint(x: 10.51, y: 48.59))
        bezierPath.addLine(to: CGPoint(x: 25, y: 39.29))
        bezierPath.addLine(to: CGPoint(x: 39.26, y: 48.44))
        bezierPath.addLine(to: CGPoint(x: 39.26, y: 48.44))
        bezierPath.addCurve(to: CGPoint(x: 40.64, y: 48.15), controlPoint1: CGPoint(x: 39.72, y: 48.74), controlPoint2: CGPoint(x: 40.34, y: 48.61))
        bezierPath.addCurve(to: CGPoint(x: 40.77, y: 47.34), controlPoint1: CGPoint(x: 40.79, y: 47.91), controlPoint2: CGPoint(x: 40.84, y: 47.62))
        bezierPath.addLine(to: CGPoint(x: 36.43, y: 30.97))
        bezierPath.addLine(to: CGPoint(x: 49.63, y: 20.17))
        bezierPath.addLine(to: CGPoint(x: 49.63, y: 20.18))
        bezierPath.addCurve(to: CGPoint(x: 49.78, y: 18.77), controlPoint1: CGPoint(x: 50.06, y: 19.83), controlPoint2: CGPoint(x: 50.13, y: 19.2))
        bezierPath.addCurve(to: CGPoint(x: 49.05, y: 18.4), controlPoint1: CGPoint(x: 49.6, y: 18.55), controlPoint2: CGPoint(x: 49.34, y: 18.42))
        bezierPath.addLine(to: CGPoint(x: 32.1, y: 17.54))
        bezierPath.addLine(to: CGPoint(x: 25.93, y: 1.64))
        bezierPath.addLine(to: CGPoint(x: 25.93, y: 1.64))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 1), controlPoint1: CGPoint(x: 25.78, y: 1.26), controlPoint2: CGPoint(x: 25.41, y: 1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 25, y: 4.76))
        bezierPath.addLine(to: CGPoint(x: 30.47, y: 18.86))
        bezierPath.addLine(to: CGPoint(x: 30.47, y: 18.86))
        bezierPath.addCurve(to: CGPoint(x: 31.35, y: 19.5), controlPoint1: CGPoint(x: 30.61, y: 19.23), controlPoint2: CGPoint(x: 30.95, y: 19.48))
        bezierPath.addLine(to: CGPoint(x: 46.36, y: 20.27))
        bezierPath.addLine(to: CGPoint(x: 34.67, y: 29.83))
        bezierPath.addLine(to: CGPoint(x: 34.67, y: 29.82))
        bezierPath.addCurve(to: CGPoint(x: 34.33, y: 30.86), controlPoint1: CGPoint(x: 34.36, y: 30.07), controlPoint2: CGPoint(x: 34.23, y: 30.48))
        bezierPath.addLine(to: CGPoint(x: 38.18, y: 45.37))
        bezierPath.addLine(to: CGPoint(x: 25.54, y: 37.26))
        bezierPath.addLine(to: CGPoint(x: 25.54, y: 37.26))
        bezierPath.addCurve(to: CGPoint(x: 24.47, y: 37.25), controlPoint1: CGPoint(x: 25.22, y: 37.05), controlPoint2: CGPoint(x: 24.8, y: 37.04))
        bezierPath.addLine(to: CGPoint(x: 11.82, y: 45.37))
        bezierPath.addLine(to: CGPoint(x: 15.67, y: 30.86))
        bezierPath.addLine(to: CGPoint(x: 15.67, y: 30.86))
        bezierPath.addCurve(to: CGPoint(x: 15.33, y: 29.82), controlPoint1: CGPoint(x: 15.77, y: 30.48), controlPoint2: CGPoint(x: 15.64, y: 30.07))
        bezierPath.addLine(to: CGPoint(x: 3.64, y: 20.27))
        bezierPath.addLine(to: CGPoint(x: 18.65, y: 19.5))
        bezierPath.addLine(to: CGPoint(x: 18.65, y: 19.5))
        bezierPath.addCurve(to: CGPoint(x: 19.53, y: 18.86), controlPoint1: CGPoint(x: 19.05, y: 19.48), controlPoint2: CGPoint(x: 19.39, y: 19.23))
        bezierPath.addLine(to: CGPoint(x: 25, y: 4.76))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawIcons8star_filledCanvas(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 10.2, y: 48.6))
        bezierPath.addCurve(to: CGPoint(x: 9.6, y: 48.4), controlPoint1: CGPoint(x: 10, y: 48.6), controlPoint2: CGPoint(x: 9.8, y: 48.5))
        bezierPath.addCurve(to: CGPoint(x: 9.2, y: 47.3), controlPoint1: CGPoint(x: 9.3, y: 48.2), controlPoint2: CGPoint(x: 9.1, y: 47.7))
        bezierPath.addLine(to: CGPoint(x: 13.6, y: 30.9))
        bezierPath.addLine(to: CGPoint(x: 0.4, y: 20.2))
        bezierPath.addCurve(to: CGPoint(x: 0, y: 19.1), controlPoint1: CGPoint(x: 0, y: 20), controlPoint2: CGPoint(x: -0.1, y: 19.5))
        bezierPath.addCurve(to: CGPoint(x: 0.9, y: 18.4), controlPoint1: CGPoint(x: 0.1, y: 18.7), controlPoint2: CGPoint(x: 0.5, y: 18.4))
        bezierPath.addLine(to: CGPoint(x: 17.9, y: 17.5))
        bezierPath.addLine(to: CGPoint(x: 24, y: 1.6))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 1), controlPoint1: CGPoint(x: 24.2, y: 1.3), controlPoint2: CGPoint(x: 24.6, y: 1))
        bezierPath.addCurve(to: CGPoint(x: 25.9, y: 1.6), controlPoint1: CGPoint(x: 25.4, y: 1), controlPoint2: CGPoint(x: 25.8, y: 1.3))
        bezierPath.addLine(to: CGPoint(x: 32, y: 17.5))
        bezierPath.addLine(to: CGPoint(x: 49, y: 18.4))
        bezierPath.addCurve(to: CGPoint(x: 49.9, y: 19.1), controlPoint1: CGPoint(x: 49.4, y: 18.4), controlPoint2: CGPoint(x: 49.8, y: 18.7))
        bezierPath.addCurve(to: CGPoint(x: 49.6, y: 20.2), controlPoint1: CGPoint(x: 50, y: 19.5), controlPoint2: CGPoint(x: 49.9, y: 19.9))
        bezierPath.addLine(to: CGPoint(x: 36.4, y: 30.9))
        bezierPath.addLine(to: CGPoint(x: 40.8, y: 47.3))
        bezierPath.addCurve(to: CGPoint(x: 40.4, y: 48.4), controlPoint1: CGPoint(x: 40.9, y: 47.7), controlPoint2: CGPoint(x: 40.8, y: 48.1))
        bezierPath.addCurve(to: CGPoint(x: 39.3, y: 48.4), controlPoint1: CGPoint(x: 40.1, y: 48.6), controlPoint2: CGPoint(x: 39.6, y: 48.7))
        bezierPath.addLine(to: CGPoint(x: 25, y: 39.2))
        bezierPath.addLine(to: CGPoint(x: 10.7, y: 48.4))
        bezierPath.addCurve(to: CGPoint(x: 10.2, y: 48.6), controlPoint1: CGPoint(x: 10.5, y: 48.6), controlPoint2: CGPoint(x: 10.4, y: 48.6))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawSingleStar(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit, singleRate: CGFloat = 0.5) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        let color = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Variable Declarations
        let singleFillWidth: CGFloat = (singleRate < 0.5 ? 0 : (singleRate > 0.5 ? 1 : 0.5)) * 50

        //// Group 2
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: singleFillWidth, height: 50))
        fillColor.setFill()
        rectanglePath.fill()


        //// Bezier 2 Drawing
        context.saveGState()
        context.setBlendMode(.destinationIn)
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 10.24, y: 49))
        bezier2Path.addCurve(to: CGPoint(x: 9.64, y: 48.8), controlPoint1: CGPoint(x: 10.04, y: 49), controlPoint2: CGPoint(x: 9.84, y: 48.9))
        bezier2Path.addCurve(to: CGPoint(x: 9.24, y: 47.69), controlPoint1: CGPoint(x: 9.34, y: 48.6), controlPoint2: CGPoint(x: 9.14, y: 48.09))
        bezier2Path.addLine(to: CGPoint(x: 13.64, y: 31.15))
        bezier2Path.addLine(to: CGPoint(x: 0.44, y: 20.36))
        bezier2Path.addCurve(to: CGPoint(x: 0.04, y: 19.25), controlPoint1: CGPoint(x: 0.04, y: 20.16), controlPoint2: CGPoint(x: -0.06, y: 19.66))
        bezier2Path.addCurve(to: CGPoint(x: 0.94, y: 18.55), controlPoint1: CGPoint(x: 0.14, y: 18.85), controlPoint2: CGPoint(x: 0.54, y: 18.55))
        bezier2Path.addLine(to: CGPoint(x: 17.95, y: 17.64))
        bezier2Path.addLine(to: CGPoint(x: 24.05, y: 1.61))
        bezier2Path.addCurve(to: CGPoint(x: 25.05, y: 1), controlPoint1: CGPoint(x: 24.25, y: 1.3), controlPoint2: CGPoint(x: 24.65, y: 1))
        bezier2Path.addCurve(to: CGPoint(x: 25.95, y: 1.61), controlPoint1: CGPoint(x: 25.45, y: 1), controlPoint2: CGPoint(x: 25.85, y: 1.3))
        bezier2Path.addLine(to: CGPoint(x: 32.05, y: 17.64))
        bezier2Path.addLine(to: CGPoint(x: 49.06, y: 18.55))
        bezier2Path.addCurve(to: CGPoint(x: 49.96, y: 19.25), controlPoint1: CGPoint(x: 49.46, y: 18.55), controlPoint2: CGPoint(x: 49.86, y: 18.85))
        bezier2Path.addCurve(to: CGPoint(x: 49.66, y: 20.36), controlPoint1: CGPoint(x: 50.06, y: 19.66), controlPoint2: CGPoint(x: 49.96, y: 20.06))
        bezier2Path.addLine(to: CGPoint(x: 36.46, y: 31.15))
        bezier2Path.addLine(to: CGPoint(x: 40.86, y: 47.69))
        bezier2Path.addCurve(to: CGPoint(x: 40.46, y: 48.8), controlPoint1: CGPoint(x: 40.96, y: 48.09), controlPoint2: CGPoint(x: 40.86, y: 48.5))
        bezier2Path.addCurve(to: CGPoint(x: 39.36, y: 48.8), controlPoint1: CGPoint(x: 40.16, y: 49), controlPoint2: CGPoint(x: 39.66, y: 49.1))
        bezier2Path.addLine(to: CGPoint(x: 25.05, y: 39.52))
        bezier2Path.addLine(to: CGPoint(x: 10.74, y: 48.8))
        bezier2Path.addCurve(to: CGPoint(x: 10.24, y: 49), controlPoint1: CGPoint(x: 10.54, y: 49), controlPoint2: CGPoint(x: 10.44, y: 49))
        bezier2Path.close()
        color.setFill()
        bezier2Path.fill()

        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 25, y: 1))
        bezierPath.addLine(to: CGPoint(x: 25, y: 1))
        bezierPath.addCurve(to: CGPoint(x: 24.07, y: 1.65), controlPoint1: CGPoint(x: 24.59, y: 1), controlPoint2: CGPoint(x: 24.22, y: 1.26))
        bezierPath.addLine(to: CGPoint(x: 17.9, y: 17.67))
        bezierPath.addLine(to: CGPoint(x: 0.95, y: 18.55))
        bezierPath.addLine(to: CGPoint(x: 0.95, y: 18.55))
        bezierPath.addCurve(to: CGPoint(x: 0, y: 19.61), controlPoint1: CGPoint(x: 0.4, y: 18.58), controlPoint2: CGPoint(x: -0.03, y: 19.05))
        bezierPath.addCurve(to: CGPoint(x: 0.37, y: 20.34), controlPoint1: CGPoint(x: 0.02, y: 19.89), controlPoint2: CGPoint(x: 0.15, y: 20.16))
        bezierPath.addLine(to: CGPoint(x: 13.57, y: 31.22))
        bezierPath.addLine(to: CGPoint(x: 9.23, y: 47.73))
        bezierPath.addLine(to: CGPoint(x: 9.23, y: 47.73))
        bezierPath.addCurve(to: CGPoint(x: 9.94, y: 48.97), controlPoint1: CGPoint(x: 9.09, y: 48.27), controlPoint2: CGPoint(x: 9.41, y: 48.82))
        bezierPath.addCurve(to: CGPoint(x: 10.74, y: 48.84), controlPoint1: CGPoint(x: 10.21, y: 49.04), controlPoint2: CGPoint(x: 10.51, y: 48.99))
        bezierPath.addLine(to: CGPoint(x: 25, y: 39.61))
        bezierPath.addLine(to: CGPoint(x: 39.26, y: 48.84))
        bezierPath.addLine(to: CGPoint(x: 39.26, y: 48.84))
        bezierPath.addCurve(to: CGPoint(x: 40.64, y: 48.54), controlPoint1: CGPoint(x: 39.72, y: 49.14), controlPoint2: CGPoint(x: 40.34, y: 49.01))
        bezierPath.addCurve(to: CGPoint(x: 40.77, y: 47.73), controlPoint1: CGPoint(x: 40.79, y: 48.3), controlPoint2: CGPoint(x: 40.84, y: 48.01))
        bezierPath.addLine(to: CGPoint(x: 36.43, y: 31.22))
        bezierPath.addLine(to: CGPoint(x: 49.63, y: 20.33))
        bezierPath.addLine(to: CGPoint(x: 49.63, y: 20.34))
        bezierPath.addCurve(to: CGPoint(x: 49.78, y: 18.92), controlPoint1: CGPoint(x: 50.06, y: 19.99), controlPoint2: CGPoint(x: 50.13, y: 19.35))
        bezierPath.addCurve(to: CGPoint(x: 49.05, y: 18.55), controlPoint1: CGPoint(x: 49.6, y: 18.7), controlPoint2: CGPoint(x: 49.34, y: 18.56))
        bezierPath.addLine(to: CGPoint(x: 32.1, y: 17.67))
        bezierPath.addLine(to: CGPoint(x: 25.93, y: 1.64))
        bezierPath.addLine(to: CGPoint(x: 25.93, y: 1.65))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 1), controlPoint1: CGPoint(x: 25.78, y: 1.26), controlPoint2: CGPoint(x: 25.41, y: 1))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 25, y: 4.8))
        bezierPath.addLine(to: CGPoint(x: 30.47, y: 19.01))
        bezierPath.addLine(to: CGPoint(x: 30.47, y: 19.01))
        bezierPath.addCurve(to: CGPoint(x: 31.35, y: 19.65), controlPoint1: CGPoint(x: 30.61, y: 19.38), controlPoint2: CGPoint(x: 30.95, y: 19.63))
        bezierPath.addLine(to: CGPoint(x: 46.36, y: 20.43))
        bezierPath.addLine(to: CGPoint(x: 34.67, y: 30.07))
        bezierPath.addLine(to: CGPoint(x: 34.67, y: 30.07))
        bezierPath.addCurve(to: CGPoint(x: 34.33, y: 31.11), controlPoint1: CGPoint(x: 34.36, y: 30.32), controlPoint2: CGPoint(x: 34.23, y: 30.73))
        bezierPath.addLine(to: CGPoint(x: 38.18, y: 45.74))
        bezierPath.addLine(to: CGPoint(x: 25.54, y: 37.56))
        bezierPath.addLine(to: CGPoint(x: 25.54, y: 37.56))
        bezierPath.addCurve(to: CGPoint(x: 24.47, y: 37.55), controlPoint1: CGPoint(x: 25.22, y: 37.35), controlPoint2: CGPoint(x: 24.8, y: 37.35))
        bezierPath.addLine(to: CGPoint(x: 11.82, y: 45.74))
        bezierPath.addLine(to: CGPoint(x: 15.67, y: 31.11))
        bezierPath.addLine(to: CGPoint(x: 15.67, y: 31.11))
        bezierPath.addCurve(to: CGPoint(x: 15.33, y: 30.07), controlPoint1: CGPoint(x: 15.77, y: 30.73), controlPoint2: CGPoint(x: 15.64, y: 30.32))
        bezierPath.addLine(to: CGPoint(x: 3.64, y: 20.43))
        bezierPath.addLine(to: CGPoint(x: 18.65, y: 19.65))
        bezierPath.addLine(to: CGPoint(x: 18.65, y: 19.65))
        bezierPath.addCurve(to: CGPoint(x: 19.53, y: 19.01), controlPoint1: CGPoint(x: 19.05, y: 19.63), controlPoint2: CGPoint(x: 19.39, y: 19.38))
        bezierPath.addLine(to: CGPoint(x: 25, y: 4.8))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()


        context.endTransparencyLayer()
        context.restoreGState()
        
        context.restoreGState()

    }

    //// Generated Images

    @objc dynamic public class func imageOfSingleStar(singleRate: CGFloat = 0.5) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            StarKit.drawSingleStar(singleRate: singleRate)

        let imageOfSingleStar = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfSingleStar
    }




    @objc(StarKitResizingBehavior)
    public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }

            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}
